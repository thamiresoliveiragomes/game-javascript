let gameMusic
let jumpSound
let fontZelda
let data
let home
let homeScreen
let backgroundHome
let startButton
let restartButton
let main
let mainScreen
let backgroundMainDay
let backgroundMainNight
let backgroundMainSunset
let characterWalk
let imageCharacterWalk
let characterJump
let imageCharacterJump
let imageEnemy1
let imageEnemy2
let imageEnemy3
let life
let imageLife
let score
let imageGameOver
let allScenes
let indexCharacterPosition
let characterPositions = []
let allEnemies = []
let currentScene = 'home'
let heightVariation

let video

const matrizCharacterJump = [
  [0, 0],
  [1000, 0],
  [2000, 0],
  [3000, 0],
  [4000, 0],
  [5000, 0],
  [6000, 0],
  [7000, 0],
  [0, 1000],
  [1000, 1000],
  [2000, 1000],
  [3000, 1000],
  [4000, 1000],
  [5000, 1000],
  [6000, 1000],
  [7000, 1000],
  [0, 2000],
  [1000, 2000],
  [2000, 2000],
  [3000, 2000],
  [4000, 2000],
  [5000, 2000],
  [6000, 2000],
  [7000, 2000],
  [0, 3000],
  [1000, 3000],
  [2000, 3000],
  [3000, 3000],
  [4000, 3000],
  [5000, 3000],
  [6000, 3000],
  [7000, 3000],
  [0, 4000],
  [1000, 4000],
  [2000, 4000],
  [3000, 4000],
  [4000, 4000],
  [5000, 4000],
  [6000, 4000],
  [7000, 4000],
  [0, 5000],
  [1000, 5000],
  [2000, 5000],
  [3000, 5000],
  [4000, 5000],
  [5000, 5000],
  [6000, 5000],
  [7000, 5000],
  [0, 6000],
  [1000, 6000],
  [2000, 6000],
  [3000, 6000],
  [4000, 6000],
  [5000, 6000],
  [6000, 6000],
  [7000, 6000],
  [0, 7000],
  [1000, 7000],
  [2000, 7000],

]

const matrizJumpCollide = [
  [0, 0],
  [1000, 0],
  [2000, 0],
  [-3000, 0],
  [-4000, 0],
  [-5000, 0],
  [6000, 0],
  [7000, 0],
  [0, 1000],
  [-1000, -1000],
  [-2000, -1000],
  [-3000, -1000],
  [4000, 1000],
  [5000, 1000],
  [6000, 1000],
  [-7000, -1000],
  [0, -2000],
  [-1000, -2000],
  [2000, 2000],
  [3000, 2000],
  [4000, 2000],
  [-5000, -2000],
  [-6000, -2000],
  [-7000, -2000],
  [0, 3000],
  [1000, 3000],
  [2000, 3000],
  [-3000, -3000],
  [-4000, -3000],
  [-5000, -3000],
  [6000, 3000],
  [7000, 3000],
  [0, 4000],
  [-1000, -4000],
  [-2000, -4000],
  [-3000, -4000],
  [4000, 4000],
  [5000, 4000],
  [6000, 4000],
  [-7000, -4000],
  [0, -5000],
  [-1000, -5000],
  [2000, 5000],
  [3000, 5000],
  [4000, 5000],
  [-5000, -5000],
  [-6000, -5000],
  [-7000, -5000],
  [0, 6000],
  [1000, 6000],
  [2000, 6000],
  [-3000, -6000],
  [-4000, -6000],
  [-5000, -6000],
  [6000, 6000],
  [7000, 6000],
  [0, 7000],
  [-1000, -7000],
  [-2000, -7000],
]
const matrizWalkCollide = [
  [0, 0],
  [1000, 0],
  [2000, 0],
  [-3000, 0],
  [-4000, 0],
  [0, -1000],
  [1000, 1000],
  [2000, 1000],
  [3000, 1000],
  [-4000, -1000],
  [0, -2000],
  [-1000, -2000],
  [2000, 2000],
  [3000, 2000],
  [4000, 2000],
  [0, -3000],
  [-1000, -3000],
  [-2000, -3000],
  [3000, 3000],
  [4000, 3000],
  [0, 4000],
  [-1000, -4000],
  [-2000, -4000],
  [-3000, -4000],
  [4000, 4000],
  [0, 5000],
  [1000, 5000],
  [-2000, -5000],
  [-3000, -5000],
  [-4000, -5000],
]

const matrizCharacterWalk = [
  [0, 0],
  [1000, 0],
  [2000, 0],
  [3000, 0],
  [4000, 0],
  [0, 1000],
  [1000, 1000],
  [2000, 1000],
  [3000, 1000],
  [4000, 1000],
  [0, 2000],
  [1000, 2000],
  [2000, 2000],
  [3000, 2000],
  [4000, 2000],
  [0, 3000],
  [1000, 3000],
  [2000, 3000],
  [3000, 3000],
  [4000, 3000],
  [0, 4000],
  [1000, 4000],
  [2000, 4000],
  [3000, 4000],
  [4000, 4000],
  [0, 5000],
  [1000, 5000],
  [2000, 5000],
  [3000, 5000],
  [4000, 5000],
]

const matrizEnemy1 = [
  [0, 0],
  [624, 0],
  [1248, 0],
  [1872, 0],
  [2496, 0],
  [0, 868],
  [624, 868],
  [1248, 868],
  [1872, 868],
  [2496, 868],
  [0, 1736],
  [624, 1736],
  [1248, 1736],
  [1872, 1736],
  [2496, 1736],
  [0, 2604],
  [624, 2604],
  [1248, 2604],
  [1872, 2604],
  [2496, 2604],
  [0, 3472],
  [624, 3472],
  [1248, 3472],
  [1872, 3472],
  [2496, 3472],
  [0, 4340],
  [624, 4340],
  [1248, 4340],
  [1872, 4340],
  [2496, 4340],
]

const matrizEnemy2 = [
  [0, 0],
  [873, 0],
  [1746, 0],
  [2619, 0],
  [3492, 0],
  [0, 125],
  [873, 125],
  [1746, 125],
  [2619, 125],
  [3492, 125],
  [0, 250],
  [873, 250],
  [1746, 250],
  [2619, 250],
  [3492, 250],
  [0, 375],
  [873, 375],
  [1746, 375],
  [2619, 375],
  [3492, 375],
  [0, 500],
  [873, 500],
  [1746, 500],
  [2619, 500],
  [3492, 500],
  [0, 625],
  [873, 625],
  [1746, 625],
  [2619, 625],
  [3492, 625],
]

const matrizEnemy3 = [
  [0, 0],
  [86, 0],
  [172, 0],
  [258, 0],
  [344, 0],
  [430, 0],
  [0, 86],
  [86, 86],
  [172, 86],
  [258, 86],
  [344, 86],
  [430, 86],
  [0, 172],
  [86, 172],
  [172, 172],
  [258, 172],
  [344, 172],
  [430, 172],
  [0, 258],
  [86, 258],
  [172, 258],
  [258, 258],
  [344, 258],
  [430, 258],
  [0, 344],
  [86, 344],
  [172, 344],
  [258, 344],
  [344, 344],
  [430, 344],
  [0, 430],
  [86, 430],
  [172, 430],
  [258, 430],
  [344, 430],
  [430, 430],
]

const collisionPolygonCharacterWalk = [
  [195, 55],
  [210, 65],
  [200, 85],
  [225, 95],
  [245, 105],
  [255, 115],
  [265, 135],
  [265, 160],
  [255, 190],
  [245, 200],
  [235, 210],
  [225, 220],
  [195, 225],
  [225, 340],
  [155, 340],
  [185, 225],
  [175, 220],
  [165, 210],
  [155, 200],
  [145, 190],
  [135, 180],
  [130, 150],
  [135, 130],
  [145, 115],
  [155, 105],
  [165, 100],
  [200, 85],
  [185, 70],
];
const collisionPolygonCharacterJump = [
  [195, 55],
  [210, 65],
  [200, 85],
  [225, 95],
  [245, 105],
  [255, 115],
  [265, 135],
  [265, 160],
  [255, 190],
  [245, 200],
  [235, 210],
  [225, 220],
  [195, 225],
  [225, 300],
  [155, 300],
  [185, 225],
  [175, 220],
  [165, 210],
  [155, 200],
  [145, 190],
  [135, 180],
  [130, 150],
  [135, 130],
  [145, 115],
  [155, 105],
  [165, 100],
  [200, 85],
  [185, 70],
];

const collisionPolygonEnemy1 = [
  [20, 5],
  [120, 60],
  [70, 100],
  [70, 170],
  [60, 170],
  [60, 100],
  [20, 80],
  [10, 70],
  [5, 30]
];

const collisionPolygonEnemy2 = [
  [20, 2],
  [180, 2],
  [180, 20],
  [20, 20],
];

const collisionPolygonEnemy3 = [
  [55, 0],
  [65, 3],
  [75, 6],
  [85, 9],
  [95, 20],
  [95, 60],
  [90, 70],
  [85, 80],
  [75, 85],
  [55, 85],
  [35, 75],
  [20, 60],
  [20, 30],
  [25, 20],
  [30, 10],
  [35, 5],
];